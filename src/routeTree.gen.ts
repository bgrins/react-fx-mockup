/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SqliteVecDemoRouteImport } from './routes/sqlite-vec-demo'
import { Route as SplitViewRouteImport } from './routes/split-view'
import { Route as LinkPreviewDemoRouteImport } from './routes/link-preview-demo'
import { Route as IndexRouteImport } from './routes/index'
import { Route as InferTestIndexRouteImport } from './routes/infer-test/index'
import { Route as InferTestInferTestRouteImport } from './routes/infer-test/_infer-test'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api/chat'
import { ServerRoute as ApiInferV1ChatCompletionsServerRouteImport } from './routes/api/infer/v1/chat/completions'

const InferTestRouteImport = createFileRoute('/infer-test')()
const rootServerRouteImport = createServerRootRoute()

const InferTestRoute = InferTestRouteImport.update({
  id: '/infer-test',
  path: '/infer-test',
  getParentRoute: () => rootRouteImport,
} as any)
const SqliteVecDemoRoute = SqliteVecDemoRouteImport.update({
  id: '/sqlite-vec-demo',
  path: '/sqlite-vec-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const SplitViewRoute = SplitViewRouteImport.update({
  id: '/split-view',
  path: '/split-view',
  getParentRoute: () => rootRouteImport,
} as any)
const LinkPreviewDemoRoute = LinkPreviewDemoRouteImport.update({
  id: '/link-preview-demo',
  path: '/link-preview-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const InferTestIndexRoute = InferTestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InferTestRoute,
} as any)
const InferTestInferTestRoute = InferTestInferTestRouteImport.update({
  id: '/_infer-test',
  getParentRoute: () => InferTestRoute,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiInferV1ChatCompletionsServerRoute =
  ApiInferV1ChatCompletionsServerRouteImport.update({
    id: '/api/infer/v1/chat/completions',
    path: '/api/infer/v1/chat/completions',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/link-preview-demo': typeof LinkPreviewDemoRoute
  '/split-view': typeof SplitViewRoute
  '/sqlite-vec-demo': typeof SqliteVecDemoRoute
  '/infer-test': typeof InferTestInferTestRoute
  '/infer-test/': typeof InferTestIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/link-preview-demo': typeof LinkPreviewDemoRoute
  '/split-view': typeof SplitViewRoute
  '/sqlite-vec-demo': typeof SqliteVecDemoRoute
  '/infer-test': typeof InferTestIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/link-preview-demo': typeof LinkPreviewDemoRoute
  '/split-view': typeof SplitViewRoute
  '/sqlite-vec-demo': typeof SqliteVecDemoRoute
  '/infer-test': typeof InferTestRouteWithChildren
  '/infer-test/_infer-test': typeof InferTestInferTestRoute
  '/infer-test/': typeof InferTestIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/link-preview-demo'
    | '/split-view'
    | '/sqlite-vec-demo'
    | '/infer-test'
    | '/infer-test/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/link-preview-demo'
    | '/split-view'
    | '/sqlite-vec-demo'
    | '/infer-test'
  id:
    | '__root__'
    | '/'
    | '/link-preview-demo'
    | '/split-view'
    | '/sqlite-vec-demo'
    | '/infer-test'
    | '/infer-test/_infer-test'
    | '/infer-test/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LinkPreviewDemoRoute: typeof LinkPreviewDemoRoute
  SplitViewRoute: typeof SplitViewRoute
  SqliteVecDemoRoute: typeof SqliteVecDemoRoute
  InferTestRoute: typeof InferTestRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
  '/api/infer/v1/chat/completions': typeof ApiInferV1ChatCompletionsServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
  '/api/infer/v1/chat/completions': typeof ApiInferV1ChatCompletionsServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
  '/api/infer/v1/chat/completions': typeof ApiInferV1ChatCompletionsServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/chat' | '/api/infer/v1/chat/completions'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat' | '/api/infer/v1/chat/completions'
  id: '__root__' | '/api/chat' | '/api/infer/v1/chat/completions'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
  ApiInferV1ChatCompletionsServerRoute: typeof ApiInferV1ChatCompletionsServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/infer-test': {
      id: '/infer-test'
      path: '/infer-test'
      fullPath: '/infer-test'
      preLoaderRoute: typeof InferTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sqlite-vec-demo': {
      id: '/sqlite-vec-demo'
      path: '/sqlite-vec-demo'
      fullPath: '/sqlite-vec-demo'
      preLoaderRoute: typeof SqliteVecDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/split-view': {
      id: '/split-view'
      path: '/split-view'
      fullPath: '/split-view'
      preLoaderRoute: typeof SplitViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/link-preview-demo': {
      id: '/link-preview-demo'
      path: '/link-preview-demo'
      fullPath: '/link-preview-demo'
      preLoaderRoute: typeof LinkPreviewDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/infer-test/': {
      id: '/infer-test/'
      path: '/'
      fullPath: '/infer-test/'
      preLoaderRoute: typeof InferTestIndexRouteImport
      parentRoute: typeof InferTestRoute
    }
    '/infer-test/_infer-test': {
      id: '/infer-test/_infer-test'
      path: '/infer-test'
      fullPath: '/infer-test'
      preLoaderRoute: typeof InferTestInferTestRouteImport
      parentRoute: typeof InferTestRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/infer/v1/chat/completions': {
      id: '/api/infer/v1/chat/completions'
      path: '/api/infer/v1/chat/completions'
      fullPath: '/api/infer/v1/chat/completions'
      preLoaderRoute: typeof ApiInferV1ChatCompletionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface InferTestRouteChildren {
  InferTestInferTestRoute: typeof InferTestInferTestRoute
  InferTestIndexRoute: typeof InferTestIndexRoute
}

const InferTestRouteChildren: InferTestRouteChildren = {
  InferTestInferTestRoute: InferTestInferTestRoute,
  InferTestIndexRoute: InferTestIndexRoute,
}

const InferTestRouteWithChildren = InferTestRoute._addFileChildren(
  InferTestRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LinkPreviewDemoRoute: LinkPreviewDemoRoute,
  SplitViewRoute: SplitViewRoute,
  SqliteVecDemoRoute: SqliteVecDemoRoute,
  InferTestRoute: InferTestRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
  ApiInferV1ChatCompletionsServerRoute: ApiInferV1ChatCompletionsServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
